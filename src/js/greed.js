// Generated by CoffeeScript 1.4.0
(function() {
  var Greed,
    __slice = [].slice;

  if (!('classList' in document.createElement('a'))) {
    throw new Error('Greed requires classList');
  }

  Greed = function() {
    console.log('greed.js is my personal utility library');
    console.log('core module ');
  };

  /*
  determne type of given object
  */


  Greed.is = function(type, obj) {
    var clas;
    clas = Object.prototype.toString.call(obj).slice(8, -1);
    return obj !== void 0 && obj !== null && clas === type;
  };

  Greed.is.prototype.TYPE_FUNCTION = "Function";

  Greed.is.prototype.TYPE_STRING = "String";

  Greed.is.prototype.TYPE_DATE = "Date";

  Greed.is.prototype.TYPE_ARRAY = "Array";

  Greed.is.prototype.TYPE_OBJECT = "Object";

  Greed.is.prototype.TYPE_NUMBER = "Number";

  Greed.is.prototype.TYPE_BOOLEAN = "Boolean";

  Greed.fillData = function() {
    var arg, args, key, keys, target, _i, _j, _len, _len1;
    target = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    target || (target = {});
    for (_i = 0, _len = args.length; _i < _len; _i++) {
      arg = args[_i];
      keys = Object.keys(arg);
      for (_j = 0, _len1 = keys.length; _j < _len1; _j++) {
        key = keys[_j];
        if (Greed.is('Object', arg[key]) || Greed.is('Array', arg[key])) {
          if (!target.hasOwnProperty(key)) {
            target[key] = _g.is("Array", arg[key]) ? [] : {};
          }
          _g.fillData(target[key], arg[key]);
        } else {
          if (!target.hasOwnProperty(key)) {
            target[key] = arg[key];
          }
        }
      }
    }
    return target;
  };

  /*
  extend prototype
  */


  Greed.extend = function(Child, Parent) {
    var F;
    F = function() {};
    F.prototype = Parent.prototype;
    Child.prototype = new F();
    Child.prototype.constructor = Child;
    Child.uber = Parent.prototype;
  };

  /*
  convert object into query string
  */


  Greed.serializeData = function(data) {
    var key, keys, param, params, regexSpace, value, _i, _len;
    params = [];
    regexSpace = /%20/g;
    keys = Object.keys(data);
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      value = data[key];
      param = encodeURIComponent(key).replace(regexSpace, '+') + '=' + encodeURIComponent(value).replace(regexSpace, '+');
      params.push(param);
      return;
    }
    return params.join('&');
  };

  /*
  class editing utilities
  */


  Greed.addClass = function(el, clases) {
    var clas, _i, _len;
    if (!el) {
      return;
    }
    if (!Array.isArray(clases)) {
      clases = [clases];
    }
    for (_i = 0, _len = clases.length; _i < _len; _i++) {
      clas = clases[_i];
      el.classList.add(clas);
    }
  };

  Greed.removeClass = function(el, clases) {
    var clas, _i, _len;
    if (!el) {
      return;
    }
    if (!Array.isArray(clases)) {
      clases = [clases];
    }
    for (_i = 0, _len = clases.length; _i < _len; _i++) {
      clas = clases[_i];
      el.classList.remove(clas);
    }
  };

  Greed.hasClass = function(el, clases, hasAll) {
    var clas, _i, _j, _len, _len1;
    if (!el) {
      return;
    }
    if (!Array.isArray(clases)) {
      clases = [clases];
    }
    if (hasAll) {
      for (_i = 0, _len = clases.length; _i < _len; _i++) {
        clas = clases[_i];
        if (!el.classList.contains(clas)) {
          return false;
        }
      }
      return true;
    } else {
      for (_j = 0, _len1 = clases.length; _j < _len1; _j++) {
        clas = clases[_j];
        if (el.classList.contains(clas)) {
          return true;
        }
      }
      return false;
    }
  };

  Greed.toggleClass = function(el, clas) {
    if (!el) {
      return;
    }
    return el.classList.toggle(clas);
  };

  /*
  image lazy load
  */


  Greed.lazyLoadImg = function(imgDataAttribute) {
    var images;
    imgDataAttribute || (imgDataAttribute = "data-lazy-src");
    images = document.querySelectorAll("img[" + imgDataAttribute + "]");
    [].forEach.call(images, function(image) {
      image.src = image.getAttribute(imgDataAttribute);
    });
  };

  window.Greed = Greed;

  window._g = window.Greed;

}).call(this);
